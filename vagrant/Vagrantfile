VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.define "bash", autostart: false do |vmcfg|
    vmcfg.vm.hostname = "bash"
    vmcfg.vm.network "private_network", ip: "192.168.56.101"
    vmcfg.vm.provision "bootstrap", type: "shell", path: "provision-bash.sh"
    vmcfg.vm.provision :reload
    vmcfg.vm.provider "virtualbox" do |vb|
      vb.memory = "1024"
      vb.cpus = "1"
    end
  end
  config.vm.define "kafka", autostart: false do |vmcfg|
    vmcfg.vm.hostname = "kafka"
    vmcfg.vm.network "private_network", ip: "192.168.56.102"
    vmcfg.vm.provision "bootstrap", type: "shell", path: "provision-kafka.sh"
    vmcfg.vm.provision :reload
    vmcfg.vm.provider "virtualbox" do |vb|
      vb.memory = "6144"
      vb.cpus = "4"
    end
  end
  config.vm.define "gitops", autostart: false do |vmcfg|
    vmcfg.vm.hostname = "gitops"
    vmcfg.vm.network "private_network", ip: "192.168.56.103"
    vmcfg.vm.provision "bootstrap", type: "shell", path: "provision-gitops.sh"
    vmcfg.vm.provision :reload
    vmcfg.vm.provider "virtualbox" do |vb|
      vb.memory = "6144"
      vb.cpus = "4"
    end
  end
  config.vm.define "gitlab", autostart: false do |vmcfg|
    vmcfg.vm.hostname = "gitlab"
    vmcfg.vm.network "private_network", ip: "192.168.56.104"
    vmcfg.vm.provision "bootstrap", type: "shell", path: "provision-gitlab.sh"
    vmcfg.vm.provision :reload
    vmcfg.vm.provider "virtualbox" do |vb|
      vb.memory = "10240"
      vb.cpus = "4"
    end
  end
  config.vagrant.plugins = ["vagrant-proxyconf", "vagrant-certificates", "vagrant-reload"]
  config.vm.box = "bento/ubuntu-20.04"
  config.vm.synced_folder "#{Dir.home}", "/home/vagrant/Home"
  if Vagrant.has_plugin?("vagrant-proxyconf")
    config.proxy.http     = "http://www-proxy.visana.ch:8080"
    config.proxy.https    = "http://www-proxy.visana.ch:8080"
    config.proxy.no_proxy = "localhost,127.0.0.1,.visana.ch,.visana.intra"
  end
  if Vagrant.has_plugin?('vagrant-certificates')
    config.certificates.enabled = true
    config.certificates.certs = [ "#{Dir.home}\\dev-setup\\visana-trust\\visana-v3-and-proxy-2019.pem" ]
  end
end
